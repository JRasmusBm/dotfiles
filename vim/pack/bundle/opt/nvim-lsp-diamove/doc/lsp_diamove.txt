*lsp_diamove.txt*			       Move trough the LSP diagnostics

Version:  0.2
Author:   Thore Weilbier <thore@weilbier.net>
License:  MIT

==============================================================================
					       *lsp_diamove_table_of_contents*
TABLE OF CONTENTS~

Introduction ...................................... |lsp_diamove_introduction|
Usage .................................................... |lsp_diamove_usage|
Commands .............................................. |lsp_diamove_commands|
Mappings .............................................. |lsp_diamove_mappings|
Variables ............................................ |lsp_diamove_variables|
TODO-List ............................................ |lsp_diamove_todo_list|


==============================================================================
						    *lsp_diamove_introduction*
INTRODUCTION~

This plugin simple adds the missing command to navigate through the
diagnostics by the |lsp| client. To avoid the need of pushing the diagnostics
to the location list to get access to movement commands, this plugin adds them
directly. In addition to |:cabove|, |:cbelow|, |:labove| and |:lbelow| (for
the quickfix and location list respectively), the new commands |:Dabove| and
|:Dbelow| jump in the diagnostics list of the current buffer. There is no need
to save the buffer in-between. These commands always act on the current state
of the last pushed diagnostics. In advantage to the native commands, the ones
for the diagnostics secure the sort order (while the native only assume
  a given order). Also are they able to jump between entries within the same
  line.


==============================================================================
							   *lsp_diamove_usage*
USAGE~

Simply call the |lsp_diamove_commands| or use the |lsp_diamove_mappings|
directly to jump the next error, hint or any other diagnostic by the language
server. Always relative to the current cursors position.


==============================================================================
							*lsp_diamove_commands*
COMMANDS~

								    *:Dabove*
|:[count]Dabove|

  Go to the [count] diagnostic entry above the current cursor position in the
  current buffer. If [count] is omitted, then 1 is used. If there are no
  diagnostic published, then an error message is displayed. If [count] exceeds
  the number of entries above the current position, then it jumps to the first
  entry in the file and reports a message.


								     *:Dbelow*
|:[count]Dbelow|

  Go to the [count] diagnostic entry below the current cursor position in the
  current buffer. If [count] is omitted, then 1 is used. If there are no
  diagnostic published, then an error message is displayed. If [count] exceeds
  the number of entries below the current position, then it jumps to the last
  entry in the file and reports a message.


==============================================================================
							*lsp_diamove_mappings*

MAPPINGS~

|[count][d|

  Mapping for |:Dabove| command, fully capable of getting prefixed with
  a count of how many jumps to execute.


|[count]]d|

  Mapping for |:Dbelow| command, fully capable of getting prefixed with
  a count of how many jumps to execute.


==============================================================================
						       *lsp_diamove_variables*
VARIABLES~

|g:lsp_diamove_disable_default_mapping|		   boolean (default `v:false`)

  Disables the automatic establishment of the |lsp_diamove_mappings|.


==============================================================================
						       *lsp_diamove_todo_list*
TODO-List~

    - allow to merge diagnostics with location list to integrate external
      linter as well if available (can be tricky to be clean)


==============================================================================

vim:tw=78:ts=8:noet:ft=help:norl:
