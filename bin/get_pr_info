#!/usr/bin/env python3.10

import argparse
import json
import subprocess
import pathlib
from typing import Optional, TypedDict


def get(cmd) -> str:
    return subprocess.run(cmd, capture_output=True).stdout.decode("utf-8").strip()


def graphite_config_file():
    current_git_repo = get(["git", "rev-parse", "--show-toplevel"])

    return pathlib.Path(current_git_repo) / ".git" / ".graphite_cache_persist"


def get_pr_info(field: Optional[str] = None):
    with open(graphite_config_file(), "r") as f:
        config = json.load(f)

    current_branch = get(["git", "branch", "--show-current"])

    for branch_name, branch_config in config["branches"]:
        if branch_name == current_branch:
            if field:
                return branch_config["prInfo"][field]
            return branch_config["prInfo"]

def main():
    parser = argparse.ArgumentParser(description="Process some integers.")

    parser.add_argument("field", type=str, nargs="?")

    args = parser.parse_args()

    print(get_pr_info(args.field))


if __name__ == "__main__":
    main()
