#!/usr/bin/env python3
import re
import os
import sys


import argparse
import subprocess


def run_shell(cmd) -> str:
    return subprocess.run(cmd, capture_output=True).stdout.decode("utf-8").strip()


def main():
    parser = argparse.ArgumentParser(description="")

    parser.add_argument("file", type=str, nargs="?", default="-")

    args = parser.parse_args()

    if not args.file or args.file == "-":
        contents = sys.stdin.readlines()
    else:
        with open(args.file) as f:
            contents = f.readlines()

    def resolve_path(entry):
        if not entry:
            return None

        path_portion = entry.strip()
        if os.path.exists(path_portion):
            return path_portion

        root, *rest = path_portion.split("/")
        rest_path = "/".join(rest)

        resolved_folder = run_shell(["zoxide", "query", root]) if root else root
        resolved_path = resolved_folder + "/" + rest_path

        if rest_path and os.path.exists(resolved_path):
            return resolved_path

        return resolve_path(rest_path)

    warnings_by_file = {}
    current_file = ""
    for entry in contents:
        path = resolve_path(entry)
        if path:
            current_file = path
            warnings_by_file[path] = []
            continue

        position = re.search(r"(\d+:\d+)", entry)
        if position and current_file:
            warnings_by_file[current_file].append(position.group(1))

    for file_path in warnings_by_file:
        for position in warnings_by_file[file_path]:
            print(f"{file_path}:{position}")


if __name__ == "__main__":
    main()
