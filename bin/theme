#!/bin/sh

set -e

_set_alacritty_theme() {
  cat "$DOTFILES/terminal/themes/$1.toml" >"$HOME/.config/alacritty/colorscheme.toml"
  touch "$DOTFILES/terminal/alacritty.toml"
}

_set_vscode_theme() {
  sed='sed'
  if test "$(uname)" = "Darwin"; then
    sed='gsed'
  fi

  if test "$1" = 'dark'; then
    "$sed" -Ei 's/Gruvbox Material Light/Gruvbox Material Dark/' "$DOTFILES/vscode/settings.json"
  else
    "$sed" -Ei 's/Gruvbox Material Dark/Gruvbox Material Light/' "$DOTFILES/vscode/settings.json"
  fi

  touch "$DOTFILES/vscode/settings.json"
}

_set_system_theme() {
  if type dconf >/dev/null 2>&1 ; then
    (
      dconf write '/org/gnome/desktop/interface/gtk-theme' "'Yaru-$1'"
    )
  fi

  if type osascript >/dev/null 2>&1 ; then
    if test "$1" = 'dark'; then
      osascript -e 'tell application "System Events" to tell appearance preferences to set dark mode to true'
    else
      osascript -e 'tell application "System Events" to tell appearance preferences to set dark mode to false'
    fi
  fi

}

_persist_theme() {
  echo "$1" >"$LOCAL_CONFIG/theme"
}

_set_theme() {
  if test "$1" = 'show'; then
    cat "$LOCAL_CONFIG/theme"
    return 0
  fi

  if test "$1" = 'emoji'; then
    _current_theme="$(cat "$LOCAL_CONFIG/theme")"

    if test "$_current_theme" = 'dark'; then
      printf 'ðŸŒš'
    elif test "$_current_theme" = 'light'; then
      printf 'ðŸ”†'
    else
      printf '%s' "$_current_theme"
    fi

    return 0
  fi

  if test "$1" != 'light' -a "$1" != 'dark' -a "$1" != 'toggle'; then
    echo "Usage: _set_theme (light|dark)"
    exit 1
  fi

  if test "$1" = 'toggle'; then
    _old_theme="$(cat "$LOCAL_CONFIG/theme")"
    if test "$_old_theme" = 'dark'; then
      _new_theme='light'
    elif test "$_old_theme" = 'light'; then
      _new_theme='dark'
    fi
  else
    _new_theme="$1"
  fi

  _set_alacritty_theme "$_new_theme"
  _set_system_theme "$_new_theme"
  _set_vscode_theme "$_new_theme"
  _persist_theme "$_new_theme"

  refresh-i3status
}

_set_theme "$@"
